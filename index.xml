<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Giacomo Furlan</title>
    <link>https://giacomofurlan.name/</link>
    <description>Recent content on Giacomo Furlan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 25 Aug 2018 01:41:18 +0200</lastBuildDate>
    
	<atom:link href="https://giacomofurlan.name/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About me</title>
      <link>https://giacomofurlan.name/about/</link>
      <pubDate>Sat, 25 Aug 2018 01:41:18 +0200</pubDate>
      
      <guid>https://giacomofurlan.name/about/</guid>
      <description>Always striving to learn something new, be a better person and increase my own skills, I am a self-tought senior software engineer. I seek a carreer in team and product management in the web and network companies.
Skills My skills range from team management to software engineering and development.
This is not a complete list, but the abilities I daily use.
Personal skills Languages  Italian mothertongue Brittish English proficient use  Hobbies  Piano and cello player Photographer Cyclist Traveler  Agile methodologies (and mixes of them)  Scrum Kanban  Main programming languages  PHP proficient use with Symfony framework, Doctrine ORM/ODM JavaScript / ECMAScript proficient use for frontend development, alongside the use of software like Webpack, eslint and the React.</description>
    </item>
    
    <item>
      <title>Error handling in Go</title>
      <link>https://giacomofurlan.name/post/2017/12/31/error-handling-in-go/</link>
      <pubDate>Sun, 31 Dec 2017 12:00:00 +0200</pubDate>
      
      <guid>https://giacomofurlan.name/post/2017/12/31/error-handling-in-go/</guid>
      <description>Most of the programming languages support multiple ways of handling errors, for example try-catching, value-checking, popping errors in the stack. Learning go I found the approach of this language is way different: you can let a function return an error (and eventual result(s)), thus not throwing any kind of error, and not returning “special values” like, for example, PHP’s json_decode (which can return true, false, NULL, stdClass or even an array!</description>
    </item>
    
  </channel>
</rss>