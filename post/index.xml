<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Giacomo Furlan</title>
    <link>https://giacomofurlan.name/post/</link>
    <description>Recent content in Posts on Giacomo Furlan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 10 Oct 2018 02:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://giacomofurlan.name/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Context-aware multithreading in go</title>
      <link>https://giacomofurlan.name/post/2018/10/10/context-aware-multithreading-in-go/</link>
      <pubDate>Wed, 10 Oct 2018 02:00:00 +0200</pubDate>
      
      <guid>https://giacomofurlan.name/post/2018/10/10/context-aware-multithreading-in-go/</guid>
      <description>&lt;p&gt;Multi-threading has always been the novice programmer&amp;rsquo;s scarecrow, and even
professionals might have never really written   asynchronous code before, for
a number of reasons: first of all because it&amp;rsquo;s more complicated to think
in an   asynchronous world! Golang has multi-threading in its heart, and this
is a big deal because it simplifies a number of things.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Switch to another programming language?</title>
      <link>https://giacomofurlan.name/post/2018/10/04/switch-to-another-programming-language/</link>
      <pubDate>Thu, 04 Oct 2018 17:15:00 +0200</pubDate>
      
      <guid>https://giacomofurlan.name/post/2018/10/04/switch-to-another-programming-language/</guid>
      <description>First and foremost I consider myself a software architect and engineer. My professional carreer let me focus, from a programming point of view, on web technologies, mostly the common PHP-JS stack (including obviously HTML and CSS). At least here in Italy most of the startups live on PHP and NodeJS, while other structured companies prefere Java and .NET technologies, which I all tried in my professional experience. Today I&amp;rsquo;m going to write a couple of lines on why I&amp;rsquo;d really like to go straight with Golang, or better why I&amp;rsquo;m seriosuly considering to switch to a new programming language for my personal projects and possibly affecting my job applications.</description>
    </item>
    
    <item>
      <title>Error handling in Go</title>
      <link>https://giacomofurlan.name/post/2017/12/31/error-handling-in-go/</link>
      <pubDate>Sun, 31 Dec 2017 12:00:00 +0200</pubDate>
      
      <guid>https://giacomofurlan.name/post/2017/12/31/error-handling-in-go/</guid>
      <description>Most of the programming languages support multiple ways of handling errors, for example try-catching, value-checking, popping errors in the stack. Learning go I found the approach of this language is way different: you can let a function return an error (and eventual result(s)), thus not throwing any kind of error, and not returning “special values” like, for example, PHP’s json_decode (which can return true, false, NULL, stdClass or even an array!</description>
    </item>
    
  </channel>
</rss>